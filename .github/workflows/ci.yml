name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get current tag
        id: get_tag
        run: echo ::set-output name=tag::$(git describe --tags)
      - name: Increment tag
        id: inc_tag
        run: echo ::set-output name=tag::$(echo ${{ steps.get_tag.outputs.tag }} | jq -r 'split(".") | map(tonumber) | .[2]+=1 | map(tostring) | join(".")')
      - name: Tag code
        run: |
          git tag ${{ steps.inc_tag.outputs.tag }}
          git push origin ${{ steps.inc_tag.outputs.tag }}
  build:
    runs-on: ubuntu-latest
    needs: tag

    strategy:
      fail-fast: false
      matrix:
        include:
          - board: jetson-nano
            revision: 300

    env:
      JETSON_ROOTFS_DIR: /tmp/jetson-builder/rootfs
      JETSON_BUILD_DIR: /tmp/jetson-builder/build
      JETSON_NANO_BOARD: ${{ matrix.board }}
      JETSON_NANO_REVISION: ${{ matrix.revision }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build docker image
        run: docker buildx build --platform linux/arm64 -t jetson-nano-image .

      - name: Export rootfs
        run: |
          docker export $(docker create --name nano-rootfs --platform linux/arm64 jetson-nano-image) -o rootfs.tar
          docker rm nano-rootfs
          mkdir -p /tmp/jetson-builder/rootfs
          sudo tar --same-owner -xf rootfs.tar -C /tmp/jetson-builder/rootfs

      - name: Create jetson.img
        run: |
          sudo apt install -y libxml2-utils
          sudo -E ./create-image.sh

#      - name: Upload image
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ matrix.board }}-r${{ matrix.revision }}
#          path: |
#            jetson.img
      
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.sha1 }}
          tag_name: ${{ github.ref }}
          body: ""
        env: 
          GITHUB_TOKEN: ${{ github.token }}

          
      - name: Upload image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jetson.img
          asset_name: jetson.img
          asset_content_type: application/zip
